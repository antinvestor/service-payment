name: Build and Deploy Docker Images

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main

permissions:
  contents: write
  packages: write
  pull-requests: write

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.semver.outputs.version }}
      tag: ${{ steps.semver.outputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get semantic version
        id: semver
        uses: paulhatch/semantic-version@v5.4.0
        with:
          tag_prefix: "v"
          major_pattern: "BREAKING CHANGE:"
          minor_pattern: "feat:"
          version_format: "${major}.${minor}.${patch}"
          bump_each_commit: true
          search_commit_body: true

  build-default:
    needs: version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Default service
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/default
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ needs.version.outputs.version }}
            type=sha

      - name: Build and push Default service
        uses: docker/build-push-action@v6
        with:
          context: ./apps/default
          file: ./apps/default/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ needs.version.outputs.version }}
            REVISION=${{ github.sha }}

  build-jenga-api:
    needs: version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Jenga API service
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/jenga-api
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ needs.version.outputs.version }}
            type=sha

      - name: Build and push Jenga API service
        uses: docker/build-push-action@v6
        with:
          context: ./apps/integrations/jenga-api
          file: ./apps/integrations/jenga-api/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ needs.version.outputs.version }}
            REVISION=${{ github.sha }}

  create-release:
    needs: [version, build-default, build-jenga-api]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.version.outputs.tag }}
          release_name: Release ${{ needs.version.outputs.version }}
          body: |
            ## Docker Images
            
            ### Default Service
            ```bash
            docker pull ghcr.io/${{ github.repository }}/default:${{ needs.version.outputs.version }}
            docker pull ghcr.io/${{ github.repository }}/default:latest
            ```
            
            ### Jenga API Service
            ```bash
            docker pull ghcr.io/${{ github.repository }}/jenga-api:${{ needs.version.outputs.version }}
            docker pull ghcr.io/${{ github.repository }}/jenga-api:latest
            ```
            
            ## Changes
            - Automated build from commit ${{ github.sha }}
          draft: false
          prerelease: false
